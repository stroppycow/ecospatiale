plot(t[iImpair],z[iImpair],type="p",col="green",xlab="t",ylab="z",pch=-32)
points(t[iPair],z[iPair],type="p",col="red",pch=-32)
plot(t[iImpair],z[iImpair],type="p",col="green",xlab="t",ylab="z",pch=-32)
plot(t[iImpair],z[iImpair],type="p",col="green",xlab="t",ylab="z",pch=-3)
plot(t[iImpair],z[iImpair],type="p",col="green",xlab="t",ylab="z",pch=-5)
plot(t[iImpair],z[iImpair],type="p",col="green",xlab="t",ylab="z",pch=-8)
plot(t[iImpair],z[iImpair],type="p",col="green",xlab="t",ylab="z",pch=-20)
plot(t[iImpair],z[iImpair],type="p",col="green",xlab="t",ylab="z",pch=-19)
plot(t[iImpair],z[iImpair],type="p",col="green",xlab="t",ylab="z",pch=-31)
plot(t[iImpair],z[iImpair],type="p",col="green",xlab="t",ylab="z",pch=-33)
plot(t[iImpair],z[iImpair],type="p",col="green",xlab="t",ylab="z",pch=-34)
points(t[iPair],z[iPair],type="p",col="red",pch=-264)
points(t[iPair],z[iPair],type="p",col="red",pch=-28)
plot(t[iImpair],z[iImpair],type="p",col="green",xlab="t",ylab="z",pch=-47)
plot(t[iImpair],z[iImpair],type="p",col="green",xlab="t",ylab="z",pch=-5)
plot(t[iImpair],z[iImpair],type="p",col="green",xlab="t",ylab="z",pch=-160)
plot(t[iImpair],z[iImpair],type="p",col="green",xlab="t",ylab="z",pch=-162)
plot(t[iImpair],z[iImpair],type="p",col="green",xlab="t",ylab="z",pch=-99)
plot(t[iImpair],z[iImpair],type="p",col="green",xlab="t",ylab="z",pch=-44)
plot(t[iImpair],z[iImpair],type="p",col="green",xlab="t",ylab="z",pch=-40)
plot(t[iImpair],z[iImpair],type="p",col="green",xlab="t",ylab="z",pch=-46)
plot(t[iImpair],z[iImpair],type="p",col="green",xlab="t",ylab="z",pch=-46)
points(t[iPair],z[iPair],type="p",col="red",pch=-46)
?split
qt(0.95)
?qt
?log
log2(95973586)
95973586*(1-0.9995116)
x<-95973586
x<-x/2
x<-x/2
x<-x/2
x<-x/2
x<-x/2
x<-x/2
x<-x/2
x<-x/2
x<-x/2
x<-x/2
x<-x/2
x<-x/2
x<-x/2
x<-x/2
x<-x/2
x<-x/2
x<-x/2
x<-x/2
x<-x/2
x<-x/2
x<-x/2
x<-x/2
x<-x/2
x<-x/2
x<-x/2
x<-x/2
x<-95973586
y<-c(x/2)
y<-c(y,y[length(y)]+y[length(y)]/2)
y<-c(y,y[length(y)]+y[length(y)]/2)
y<-c(y,y[length(y)]+y[length(y)]/2)
y<-c(y,y[length(y)]+y[length(y)]/2)
y<-c(y,y[length(y)]+y[length(y)]/2)
y<-c(y,y[length(y)]+y[length(y)]/2)
y<-c(y,y[length(y)]+y[length(y)]/2)
y<-c(y,y[length(y)]+y[length(y)]/2)
y<-c(y,y[length(y)]+y[length(y)]/2)
y<-c(y,y[length(y)]+y[length(y)]/2)
y<-c(y,y[length(y)]+y[length(y)]/2)
y<-c(y,y[length(y)]+y[length(y)]/2)
y<-c(y,y[length(y)]+y[length(y)]/2)
y<-c(y,y[length(y)]+y[length(y)]/2)
y<-c(y,y[length(y)]+y[length(y)]/2)
y<-c(y,y[length(y)]+y[length(y)]/2)
y<-c(y,y[length(y)]+y[length(y)]/2)
y<-c(y,y[length(y)]+y[length(y)]/2)
y<-c(y,y[length(y)]+y[length(y)]/2)
y<-c(y,y[length(y)]+y[length(y)]/2)
y<-c(y,y[length(y)]+y[length(y)]/2)
y<-c(y,y[length(y)]+y[length(y)]/2)
y<-c(y,y[length(y)]+y[length(y)]/2)
y<-c(y,y[length(y)]+y[length(y)]/2)
y<-c(y,y[length(y)]+y[length(y)]/2)
y<-c(y,y[length(y)]+y[length(y)]/2)
y<-c(y,y[length(y)]+y[length(y)]/2)
y
x<-95973586
y<-c(x/2)
y<-c(y,y[length(y)]+(x-y[length(y)])/2)
y<-c(y,y[length(y)]+(x-y[length(y)])/2)
y<-c(y,y[length(y)]+(x-y[length(y)])/2)
y<-c(y,y[length(y)]+(x-y[length(y)])/2)
y<-c(y,y[length(y)]+(x-y[length(y)])/2)
y<-c(y,y[length(y)]+(x-y[length(y)])/2)
y<-c(y,y[length(y)]+(x-y[length(y)])/2)
y<-c(y,y[length(y)]+(x-y[length(y)])/2)
y<-c(y,y[length(y)]+(x-y[length(y)])/2)
y<-c(y,y[length(y)]+(x-y[length(y)])/2)
y<-c(y,y[length(y)]+(x-y[length(y)])/2)
y<-c(y,y[length(y)]+(x-y[length(y)])/2)
y<-c(y,y[length(y)]+(x-y[length(y)])/2)
y<-c(y,y[length(y)]+(x-y[length(y)])/2)
y<-c(y,y[length(y)]+(x-y[length(y)])/2)
y<-c(y,y[length(y)]+(x-y[length(y)])/2)
y<-c(y,y[length(y)]+(x-y[length(y)])/2)
y<-c(y,y[length(y)]+(x-y[length(y)])/2)
y<-c(y,y[length(y)]+(x-y[length(y)])/2)
y<-c(y,y[length(y)]+(x-y[length(y)])/2)
y<-c(y,y[length(y)]+(x-y[length(y)])/2)
y<-c(y,y[length(y)]+(x-y[length(y)])/2)
y<-c(y,y[length(y)]+(x-y[length(y)])/2)
y<-c(y,y[length(y)]+(x-y[length(y)])/2)
y<-c(y,y[length(y)]+(x-y[length(y)])/2)
y<-c(y,y[length(y)]+(x-y[length(y)])/2)
y<-c(y,y[length(y)]+(x-y[length(y)])/2)
y
log2(96000000)
install.packages("shiny")
install.packages("FactoShiny ")
install.packages("FactoShiny")
install.packages("Factoshiny")
install.packages("VarSelLCM")
require(Factoshiny)
data(decathlon)
summary(decathlon)
res.pca <- PCA(decathlon, quanti.sup = 11:12, quali.sup=13)
res.shiny <- PCAshiny(res.pca)
require(VarSelLCM)
data(heart)
summary(heart)
res.cluster <- VarSelCluster(heart[,-13], 3, vbleSelec = FALSE)
res.cluster <- VarSelCluster(heart[,-13], 3, vbleSelec = FALSE)
res.shiny <- VarSelShiny(res.cluster)
require(shiny)
runExample("08_html")
runGitHub("GoogleAnalytics", "ChrisBeeley")
runApp('Cours/ENSAI/2A/RShiny/TP/MonPremierShiny/MonPremierShiny')
runApp('Cours/ENSAI/2A/RShiny/TP/MonPremierShiny/MonPremierShiny')
runApp('Cours/ENSAI/2A/RShiny/TP/MonPremierShiny/MonPremierShiny')
runApp('Cours/ENSAI/2A/RShiny/TP/MonPremierShiny/MonPremierShiny')
data(iris)
data("iris")
data(iris)
?iris
?plot
?plot
?plot
runApp('Cours/ENSAI/2A/RShiny/TP/MonPremierShiny/MonPremierShiny')
runApp('Cours/ENSAI/2A/RShiny/TP/MonPremierShiny/MonPremierShiny')
?iris
?par
data(iris)
?iris
library(datasets)
data(iris)
library(datasets)
data(iris)
data(iris)
library(shiny)
library(VarSelLCM)
data(iris)
remove(iris)
summay(iris$species)
data(iris)
remove(iris)
data(iris)
runApp('Cours/ENSAI/2A/RShiny/TP/MonPremierShiny/MonPremierShiny')
runApp('Cours/ENSAI/2A/RShiny/TP/MonPremierShiny/MonPremierShiny')
iris$Species
runApp('Cours/ENSAI/2A/RShiny/TP/MonPremierShiny/MonPremierShiny')
runApp('Cours/ENSAI/2A/RShiny/TP/MonPremierShiny/MonPremierShiny')
runApp('Cours/ENSAI/2A/RShiny/TP/MonPremierShiny/MonPremierShiny')
runApp('Cours/ENSAI/2A/RShiny/TP/MonPremierShiny/MonPremierShiny')
runApp('Cours/ENSAI/2A/RShiny/TP/MonPremierShiny/MonPremierShiny')
runApp('Cours/ENSAI/2A/RShiny/TP/MonPremierShiny/MonPremierShiny')
runApp('Cours/ENSAI/2A/RShiny/TP/MonPremierShiny/MonPremierShiny')
?plot
runApp('Cours/ENSAI/2A/RShiny/TP/MonPremierShiny/MonPremierShiny')
runApp('Cours/ENSAI/2A/RShiny/TP/MonPremierShiny/MonPremierShiny')
runApp('Cours/ENSAI/2A/RShiny/TP/MonPremierShiny/MonPremierShiny')
runApp('Cours/ENSAI/2A/RShiny/TP/MonPremierShiny/MonPremierShiny')
runApp('Cours/ENSAI/2A/RShiny/TP/MonPremierShiny/MonPremierShiny')
runApp('Cours/ENSAI/2A/RShiny/TP/MonPremierShiny/MonPremierShiny')
runApp('Cours/ENSAI/2A/RShiny/TP/MonPremierShiny/MonPremierShiny')
runApp('Cours/ENSAI/2A/RShiny/TP/MonPremierShiny/MonPremierShiny')
runApp('Cours/ENSAI/2A/RShiny/TP/MonPremierShiny/MonPremierShiny')
runApp('Cours/ENSAI/2A/RShiny/TP/MonPremierShiny/MonPremierShiny')
runApp('Cours/ENSAI/2A/RShiny/TP/MonPremierShiny/MonPremierShiny')
runApp('Cours/ENSAI/2A/RShiny/TP/MonPremierShiny/MonPremierShiny')
shiny::runApp('Cours/ENSAI/2A/RShiny/TP/MonPremierShiny/MonPremierShiny')
runApp('Cours/ENSAI/2A/RShiny/TP/MonPremierShiny/MonPremierShiny')
library("shinytheme")
import.pakages("shinytheme")
install.pakages("shinytheme")
install.packages("shinythemes")
library("shinythemes")
?rexp
runApp('Cours/ENSAI/2A/RShiny/TP/MonPremierShiny/MonSecondShiny/MonSecondShiny')
runApp('Cours/ENSAI/2A/RShiny/TP/MonPremierShiny/MonSecondShiny/MonSecondShiny')
runApp('Cours/ENSAI/2A/RShiny/TP/MonPremierShiny/MonSecondShiny/MonSecondShiny')
runApp('Cours/ENSAI/2A/RShiny/TP/MonPremierShiny/MonSecondShiny/MonSecondShiny')
?selectInput
runApp('Cours/ENSAI/2A/RShiny/TP/MonPremierShiny/MonSecondShiny/MonSecondShiny')
?numericInput
runApp('Cours/ENSAI/2A/RShiny/TP/MonPremierShiny/MonSecondShiny/MonSecondShiny')
runApp('Cours/ENSAI/2A/RShiny/TP/MonPremierShiny/MonSecondShiny/MonSecondShiny')
?hist
runApp('Cours/ENSAI/2A/RShiny/TP/MonPremierShiny/MonSecondShiny/MonSecondShiny')
runApp('Cours/ENSAI/2A/RShiny/TP/MonPremierShiny/MonSecondShiny/MonSecondShiny')
runApp('Cours/ENSAI/2A/RShiny/TP/MonPremierShiny/MonSecondShiny/MonSecondShiny')
?dnorm
runApp('Cours/ENSAI/2A/RShiny/TP/MonPremierShiny/MonSecondShiny/MonSecondShiny')
?hist
runApp('Cours/ENSAI/2A/RShiny/TP/MonPremierShiny/MonSecondShiny/MonSecondShiny')
runApp('Cours/ENSAI/2A/RShiny/TP/MonPremierShiny/MonSecondShiny/MonSecondShiny')
runApp('Cours/ENSAI/2A/RShiny/TP/MonPremierShiny/MonSecondShiny/MonSecondShiny')
runApp('Cours/ENSAI/2A/RShiny/TP/MonPremierShiny/MonSecondShiny/MonSecondShiny')
runApp('Cours/ENSAI/2A/RShiny/TP/MonPremierShiny/MonSecondShiny/MonSecondShiny')
runApp('Cours/ENSAI/2A/RShiny/TP/MonPremierShiny/MonSecondShiny/MonSecondShiny')
runApp('Cours/ENSAI/2A/RShiny/TP/MonPremierShiny/MonSecondShiny/MonSecondShiny')
runApp('Cours/ENSAI/2A/RShiny/TP/MonPremierShiny/MonSecondShiny/MonSecondShiny')
?lines
runApp('Cours/ENSAI/2A/RShiny/TP/MonPremierShiny/MonSecondShiny/MonSecondShiny')
?dnorm
runApp('Cours/ENSAI/2A/RShiny/TP/MonPremierShiny/MonSecondShiny/MonSecondShiny')
?textInput
runApp('Cours/ENSAI/2A/RShiny/TP/MonPremierShiny/MonSecondShiny/MonSecondShiny')
runApp('Cours/ENSAI/2A/RShiny/TP/MonPremierShiny/MonSecondShiny/MonSecondShiny')
library(ggplot)
library("ggplot2")
install.packages("rgeoapi")
library("plyr")
devtools::install_github("ColinFay/rgeoapi")
library("devtools")
install.packages("devtools")
library("devtools")
devtools::install_github("ColinFay/rgeoapi")
geo <- ldply (53 , ComByReg )
library(plyr)
geo <- ldply (53 , ComByReg )
devtools::install_github("ColinFay/rgeoapi")
devtools::install_github("ColinFay/rgeoapi")
??rgeoapi
geo <- ldply (53 , "ComByReg"  )
geo <- ldply (53 , ComByReg)
geo <- ldply(53 , ComByReg)
ComByReg(53)
?ComByReg
library("rgeoapi")
ComByReg(53)
geo <- ldply(53 , ComByReg)
View(geo)
View(geo)
shiny::runApp('Cours/ENSAI/2A/RShiny/TP/MonDernierShiny/MonDernierShiny')
runApp('Cours/ENSAI/2A/RShiny/TP/MonDernierShiny/MonDernierShiny')
runApp('Cours/ENSAI/2A/RShiny/TP/MonDernierShiny/MonDernierShiny')
View(geo)
runApp('Cours/ENSAI/2A/RShiny/TP/MonDernierShiny/MonDernierShiny')
runApp('Cours/ENSAI/2A/RShiny/TP/MonDernierShiny/MonDernierShiny')
runApp('Cours/ENSAI/2A/RShiny/TP/MonDernierShiny/MonDernierShiny')
runApp('Cours/ENSAI/2A/RShiny/TP/MonDernierShiny/MonDernierShiny')
runApp('Cours/ENSAI/2A/RShiny/TP/MonDernierShiny/MonDernierShiny')
runApp('Cours/ENSAI/2A/RShiny/TP/MonDernierShiny/MonDernierShiny')
runApp('Cours/ENSAI/2A/RShiny/TP/MonDernierShiny/MonDernierShiny')
View(geo)
runApp('Cours/ENSAI/2A/RShiny/TP/MonDernierShiny/MonDernierShiny')
View(geo)
runApp('Cours/ENSAI/2A/RShiny/TP/MonDernierShiny/MonDernierShiny')
runApp('Cours/ENSAI/2A/RShiny/TP/MonDernierShiny/MonDernierShiny')
runApp('Cours/ENSAI/2A/RShiny/TP/MonDernierShiny/MonDernierShiny')
runApp('Cours/ENSAI/2A/RShiny/TP/MonDernierShiny/MonDernierShiny')
runApp('Cours/ENSAI/2A/RShiny/TP/MonDernierShiny/MonDernierShiny')
runApp('Cours/ENSAI/2A/RShiny/TP/MonDernierShiny/MonDernierShiny')
View(geo)
View(geo)
runApp('Cours/ENSAI/2A/RShiny/TP/MonDernierShiny/MonDernierShiny')
runApp('Cours/ENSAI/2A/RShiny/TP/MonDernierShiny/MonDernierShiny')
runApp('Cours/ENSAI/2A/RShiny/TP/MonDernierShiny/MonDernierShiny')
runApp('Cours/ENSAI/2A/RShiny/TP/MonDernierShiny/MonDernierShiny')
runApp('Cours/ENSAI/2A/RShiny/TP/MonDernierShiny/MonDernierShiny')
runApp('Cours/ENSAI/2A/RShiny/TP/MonDernierShiny/MonDernierShiny')
runApp('Cours/ENSAI/2A/RShiny/TP/MonDernierShiny/MonDernierShiny')
runApp('Cours/ENSAI/2A/RShiny/TP/MonDernierShiny/MonDernierShiny')
runApp('Cours/ENSAI/2A/RShiny/TP/MonDernierShiny/MonDernierShiny')
runApp('Cours/ENSAI/2A/RShiny/TP/MonDernierShiny/MonDernierShiny')
runApp('Cours/ENSAI/2A/RShiny/TP/MonDernierShiny/MonDernierShiny')
runApp('Cours/ENSAI/2A/RShiny/TP/MonDernierShiny/MonDernierShiny')
runApp('Cours/ENSAI/2A/RShiny/TP/MonDernierShiny/MonDernierShiny')
runApp('Cours/ENSAI/2A/RShiny/TP/MonDernierShiny/MonDernierShiny')
runApp('Cours/ENSAI/2A/RShiny/TP/MonDernierShiny/MonDernierShiny')
runApp('Cours/ENSAI/2A/RShiny/TP/MonDernierShiny/MonDernierShiny')
runApp('Cours/ENSAI/2A/RShiny/TP/MonDernierShiny/MonDernierShiny')
runApp('Cours/ENSAI/2A/RShiny/TP/MonDernierShiny/MonDernierShiny')
nomData <- read.csv("C:/Users/Théo/Documents/Cours/ENSAI/2A/Projet statistique/nomENSAI.csv",sep=";")
ratS2 <- read.csv("C:/Users/Théo/Documents/Cours/ENSAI/2A/Divers/ratS2.csv",sep=";")
ratS2<-ratS2[1:127,1:21]
ratrapage<-merge(ratS2,nomData,all.x=T,all.y=F,by.x="id",by.y="idENSAI")
View(ratrapage)
nomData <- read.csv("C:/Users/Théo/Documents/Cours/ENSAI/2A/Projet statistique/nomENSAI.csv",sep=";")
ratS2 <- read.csv("C:/Users/Théo/Documents/Cours/ENSAI/2A/Divers/ratS2.csv",sep=";")
ratS2<-ratS2[1:127,1:21]
ratrapage<-merge(ratS2,nomData,all.x=T,all.y=F,by.x="id",by.y="idENSAI")
View(ratrapage)
rattrapage[which(ratrapage$NomComplet=="HOFSTETTER Eric"),]
ratrapage[which(ratrapage$NomComplet=="HOFSTETTER Eric"),]
options(java.parameters = "-Xmx8000m")
library(rgdal)
library(rgeos)
library(xlsx)
library(igraph)
library(maptools)
library(spdep)
setwd("~/Cours/ENSAI/Master/Economerie spatiale/ecospatiale")
load("../data/donnees_projet.RData")
apply(is.na(communes@data),MARGIN=2,FUN="sum")
communes@data$Colors =ifelse(is.na(communes@data$MED15),"red","beige")
c<- as.vector(1*c(0:100)+19800)
d<-lapply(c,FUN="NA_MED")
com2<-communes
#On trouve la valeur initiale d'imputation qui minimise la variance
NA_MED <- function(x){
com2@data[is.na(communes@data$MED15),]$MED15=rep(x)
v_tx_MED<-lag.listw(cont.w,com2@data$MED15)
a <- (com2@data$MED15-v_tx_MED)[is.na(communes@data$MED15)]
return (var(a))
}
d<-lapply(c,FUN="NA_MED")
plot(c,d) #19860
c<- as.vector(1*c(0:100)+19900)
d<-lapply(c,FUN="NA_MED")
plot(c,d) #19860
mean(com2@data$MED15)
?mean
mean(com2@data$MED15,na.rm=T)
plot(c,d) #19860
rep(3)
com2<-communes
c<- 19500:20000
d<-sapply(c,FUN="NA_MED")
plot(c,d) #19860
c<- 19900:20000
d<-sapply(c,FUN="NA_MED")
plot(c,d) #19860
c<- 19800:20000
d<-sapply(c,FUN="NA_MED")
plot(c,d) #19860
which.min(d)
c[which.min(d)]
argmin <- c[which.min(d)] #19926
hist(communes@data$MED15)
load("../data/donnees_projet.RData")
com2<-communes
#On trouve la valeur initiale d'imputation qui minimise la variance de l'ecart entre la valeur imputé et la valeur des voisins
NA_MED <- function(x){
com2@data[is.na(communes@data$MED15),]$MED15=x
v_MED15<-lag.listw(cont.w,com2@data$MED15)
a <- (com2@data$MED15-v_MED15)[is.na(communes@data$MED15)]
var(a)
}
c<- 19800:20000
d<-sapply(c,FUN="NA_MED")
plot(c,d)
argmin <- c[which.min(d)] #19926
Comp_lag <- function(x){
com2@data[is.na(communes@data$MED15),]$MED15=x
v_MED<-lag.listw(cont.w,com2@data$MED15)
com2@data[is.na(communes@data$MED15),]$MED15=v_MED[is.na(communes@data$MED15)]
v_MED<-lag.listw(cont.w,com2@data$MED15)
com2@data[is.na(communes@data$MED15),]$MED15=v_MED[is.na(communes@data$MED15)]
v_MED<-lag.listw(cont.w,com2@data$MED15)
com2@data[is.na(communes@data$MED15),]$MED15=v_MED[is.na(communes@data$MED15)]
v_MED<-lag.listw(cont.w,com2@data$MED15)
com2@data[is.na(communes@data$MED15),]$MED15=v_MED[is.na(communes@data$MED15)]
v_MED<-lag.listw(cont.w,com2@data$MED15)
com2@data[is.na(communes@data$MED15),]$MED15=v_MED[is.na(communes@data$MED15)]
v_MED<-lag.listw(cont.w,com2@data$MED15)
com2@data[is.na(communes@data$MED15),]$MED15=v_MED[is.na(communes@data$MED15)]
v_MED2<-lag.listw(cont.w,com2@data$MED15)
com2@data[is.na(communes@data$MED15),]$MED15=v_MED2[is.na(communes@data$MED15)]
return (com2@data)
}
Ilots <- function(x){
com2@data[is.na(communes@data$MED15),]$MED15=rep(x)
v_tx_MED1<-lag.listw(cont.w,com2@data$MED15)
return (Comp_lag(x)[v_tx_MED1==x,c("insee","MED15")])
}
mean(com2@data$MED15[!is.na(communes@data$MED15)])
mean(com2@data$MED15,na.rm=T)
moran.test(Comp_lag(argmin)$MED15, cont.w)
com2@data=Comp_lag(argmin)
legend.col <- function(col, lev){
opar <- par
n <- length(col)
bx <- par("usr")
box.cx <- c(bx[2] + (bx[2] - bx[1]) / 1000,
bx[2] + (bx[2] - bx[1]) / 1000 + (bx[2] - bx[1]) / 50)
box.cy <- c(bx[3], bx[3])
box.sy <- (bx[4] - bx[3]) / n
xx <- rep(box.cx, each = 2)
par(xpd = TRUE)
for(i in 1:n){
yy <- c(box.cy[1] + (box.sy * (i - 1)),
box.cy[1] + (box.sy * (i)),
box.cy[1] + (box.sy * (i)),
box.cy[1] + (box.sy * (i - 1)))
polygon(xx, yy, col = col[i], border = col[i])
}
par(new = TRUE)
plot(0, 0, type = "n",
ylim = c(min(lev), max(lev)),
yaxt = "n", ylab = "",
xaxt = "n", xlab = "",
frame.plot = FALSE)
axis(side = 4, las = 2, tick = FALSE, line = .25)
par <- opar
}
library(RColorBrewer)
summary(com2@data$MED15)
remplissage<-rep("#F7F7F7",length(europe@data$NUTS_NAME))
remplissage[which(europe@data$NUTS_NAME=="FRANCE")]<-"transparent"
#Carte chrolorphlete revenu Median
couleurMED15 <- brewer.pal(9, "YlOrBr")
palMED15 <- colorRampPalette(couleurMED15)
couleurMED15<-palMED15(100)
colMapMED15 <- couleurMED15[findInterval(com2@data$MED15, seq(10000,47000,length.out = 100), all.inside = TRUE)]
pdf("../sorties/MED15.pdf",width=7,height=7.5)
par(mar=c(0.1,0.1,4,3))
plot(com2,lty=0,col=colMapMED15)
plot(europe,col=remplissage,add=TRUE)
title(main="Revenu médian")
box(which = "plot", lty = "solid")
legend.col(col = couleurMED15, lev = seq(10000,47000,length.out = 100))
dev.off()
a<-gUnaryUnion(communes,id=which(communes@data$MED15))
a<-gUnaryUnion(communes,id=which(is.na(communes@data$MED15)))
View(a)
plot(a)
communes_na<- gUnaryUnion(communes_na,1)
communes_na <- subset(communes,is.na(communes@data$MED15))
communes_na<- gUnaryUnion(communes_na,1)
View(communes_na)
plot(communes_na)
communes_na <- subset(communes,is.na(communes@data$MED15))
?plot
remplissage<-rep("#F7F7F7",length(europe@data$NUTS_NAME))
remplissage[which(europe@data$NUTS_NAME=="FRANCE")]<-"transparent"
#Carte chrolorphlete revenu Median
couleurMED15 <- brewer.pal(9, "YlOrBr")
palMED15 <- colorRampPalette(couleurMED15)
couleurMED15<-palMED15(100)
colMapMED15 <- couleurMED15[findInterval(com2@data$MED15, seq(10000,47000,length.out = 100), all.inside = TRUE)]
communes_na <- subset(communes,is.na(communes@data$MED15))
pdf("../sorties/MED15.pdf",width=7,height=7.5)
par(mar=c(0.1,0.1,4,3))
plot(com2,lty=0,col=colMapMED15,type="n")
remplissage<-rep("#F7F7F7",length(europe@data$NUTS_NAME))
remplissage[which(europe@data$NUTS_NAME=="FRANCE")]<-"transparent"
#Carte chrolorphlete revenu Median
couleurMED15 <- brewer.pal(9, "YlOrBr")
palMED15 <- colorRampPalette(couleurMED15)
couleurMED15<-palMED15(100)
colMapMED15 <- couleurMED15[findInterval(com2@data$MED15, seq(10000,47000,length.out = 100), all.inside = TRUE)]
communes_na <- subset(communes,is.na(communes@data$MED15))
pdf("../sorties/MED15.pdf",width=7,height=7.5)
par(mar=c(0.1,0.1,4,3))
plot(com2,lty=0,col=colMapMED15,type="n")
plot(communes_na,lty=1,col="transparent")
plot(com2,lty=0,col=colMapMED15)
plot(europe,col=remplissage,add=TRUE)
title(main="Revenu médian")
box(which = "plot", lty = "solid")
legend.col(col = couleurMED15, lev = seq(10000,47000,length.out = 100))
dev.off()
pdf("../sorties/MED15.pdf",width=7,height=7.5)
par(mar=c(0.1,0.1,4,3))
plot(com2,lty=0,col=colMapMED15)
plot(communes_na,lty=1,col="transparent")
plot(europe,col=remplissage,add=TRUE)
title(main="Revenu médian")
box(which = "plot", lty = "solid")
legend.col(col = couleurMED15, lev = seq(10000,47000,length.out = 100))
dev.off()
communes@data$dep <- substr(communes@data$insee,1,2)
communes@data$dep <- as.factor(communes@data$dep)
?table
table(communes@data$dep,is.na(communes@data$MED15))
?aggregate
aggregate(data.frame(NAMED=is.na(communes@data$MED15),MED15=communes@data$MED15,n=1),by=list(dep=communes@data$dep),FUN="sum")
aggregate(data.frame(NAMED=is.na(communes@data$MED15),MED15=communes@data$MED15,n=1),by=list(dep=communes@data$dep),FUN="sum",na.action="na.omit")
aggregate(data.frame(NAMED=is.na(communes@data$MED15),MED15=communes@data$MED15,n=1),by=list(dep=communes@data$dep),FUN="sum",na.action=na.omit)
aggregate(data.frame(NAMED=is.na(communes@data$MED15),MED15=communes@data$MED15,n=1),by=list(dep=communes@data$dep),FUN="sum",na.action=NULL)
aggregate(data.frame(NAMED=is.na(communes@data$MED15),MED15=communes@data$MED15,n=1),by=list(dep=communes@data$dep),FUN="sum",na.action=na.pass)
library(stat)
library(stats)
aggregate(data.frame(NAMED=is.na(communes@data$MED15),MED15=communes@data$MED15,n=1),by=list(dep=communes@data$dep),FUN="sum",na.action=na.pass)
aggregate(data.frame(NAMED=is.na(communes@data$MED15),MED15=communes@data$MED15,n=1),by=list(dep=communes@data$dep),FUN="sum",na.action="na.pass")
aggregate(data.frame(NAMED=is.na(communes@data$MED15),MED15=communes@data$MED15,n=1),by=list(dep=communes@data$dep),FUN="sum",na.rm=T)
x<-aggregate(data.frame(NAMED=is.na(communes@data$MED15),MED15=communes@data$MED15,n=1),by=list(dep=communes@data$dep),FUN="sum",na.rm=T)
x$MED15_mean = x$MED15/x$n
x
aggregate(data.frame(MED15=com2@data$MED15),by=substr(com2@data$insee,1,2),FUN="mean")
aggregate(data.frame(MED15=com2@data$MED15),by=list(substr(com2@data$insee,1,2)),FUN="mean")
summary(com2@data$MED15[substr(com2@data$insee,1,2)=="65"])
summary(communes@data$MED15[substr(com2@data$insee,1,2)=="65"])
x$MED15_mean = x$MED15/(x$n-x$NAMED)
x
summary(com2@data$MED15[substr(com2@data$insee,1,2)=="27"])
summary(communes@data$MED15[substr(com2@data$insee,1,2)=="27"])
communes@data[substr(communes@data$insee,1,2)==22 & is.na(communes@data$MED15),c("insee",nom")]
communes@data[substr(communes@data$insee,1,2)==22 & is.na(communes@data$MED15),c("insee",nom")]
communes@data[substr(communes@data$insee,1,2)==22 & is.na(communes@data$MED15),c("insee","nom")]
neighbors(communes,"22139")
